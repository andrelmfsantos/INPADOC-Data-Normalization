{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMvOBEkNxw4ObS5t7+qO6/c",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/andrelmfsantos/INPADOC-Data-Normalization/blob/main/Scripts_INPADOC\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<pre>\n",
        "<img align=\"center\" width=\"900\" src=\"https://raw.githubusercontent.com/andrelmfsantos/INPADOC-Data-Normalization/main/Images/FAPESP_Header_Google_Colab_english.png\">\n",
        "</pre>\n",
        "\n",
        "> * __INPADOC: International Patent Documentation__\n",
        "* [FAPESP Process Number: 23/12389-1](https://bv.fapesp.br/pt/auxilios/113767/solucoes-diagnosticas-e-terapeuticas-da-covid-19-protegidas-por-patentes-sistematizacao-das-principa/)"
      ],
      "metadata": {
        "id": "MDNQjJO8ybl_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "|   |   |\n",
        "|--:|:--|\n",
        "|**Authors:**|[Priscila Rezende da Costa](https://bv.fapesp.br/pt/pesquisador/67192/priscila-rezende-da-costa/) $-$ [Camila Naves Arantes](http://lattes.cnpq.br/3897204543440920) $-$ [Alex Fabianne de Paulo](http://lattes.cnpq.br/9690861410844635) $-$ </br> [Geciane Silveira Porto](https://bv.fapesp.br/pt/pesquisador/89388/geciane-silveira-porto/) $-$ [André Luis Marques Ferreira dos Santos](http://lattes.cnpq.br/9690861410844635) $-$ [Celise Marson](http://lattes.cnpq.br/2618279063609476)|\n",
        "|**Host Institution:**|[Universidade Nove de Julho (UNINOVE). Campus Vergueiro. São Paulo , SP, Brasil](https://bv.fapesp.br/pt/instituicao/1496/campus-vergueiro/)|\n",
        "|**Date:**|July 13, 2024|"
      ],
      "metadata": {
        "id": "iMGbnWkfyfh-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**18,298 results from Derwent Innovations Index for:**\n",
        "\n",
        "* Topic:\n",
        "\n",
        "    * (\"COVID*\" OR \"coronavirus disease 2019\" OR \"coronavirus pneumonia\" OR \"novel coronavirus disease\" OR \"COVID\" OR \"COVID disease\" OR \"COVID virus\" OR \"coronavirus pandemic\" OR \"SARS-CoV-2\" OR \"coronavirus 2\" OR \"novel coronavirus\" OR \"COVID virus\" OR \"sarsa\" OR \"Wuhan coronavirus\")\n",
        "* [Derwent $-$ Web of Science](https://www.webofscience.com/wos/diidw/summary/01631a4b-22fd-40a9-886c-e1087358711f-fb23bb19/diidw-relevance/1)\n",
        "* Export: \"Tab delimited file\"\n",
        "* Record Content: Full Record"
      ],
      "metadata": {
        "id": "9p44q6I_ypzV"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7B6ndCHbyKmO"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "\n",
        "# Path to the directory\n",
        "directory = \"/home/brow/Documents/Artigo_FAPESP_Protocolo/Exports_Web_of_Science/\"\n",
        "\n",
        "# Function to rename the files\n",
        "def rename_files(directory):\n",
        "    for filename in os.listdir(directory):\n",
        "        if filename.startswith(\"savedrecs\"):\n",
        "            if filename == \"savedrecs.txt\":\n",
        "                new_filename = \"savedrecs_0.txt\"\n",
        "            else:\n",
        "                new_filename = filename.replace(\"savedrecs \", \"savedrecs_\").replace(\"(\", \"\").replace(\")\", \"\")\n",
        "\n",
        "            # Full path of the old and new file\n",
        "            old_file = os.path.join(directory, filename)\n",
        "            new_file = os.path.join(directory, new_filename)\n",
        "\n",
        "            # Rename the file\n",
        "            os.rename(old_file, new_file)\n",
        "            print(f'Renamed: {old_file} to {new_file}')\n",
        "\n",
        "# Call the function to rename the files\n",
        "rename_files(directory)"
      ]
    }
  ]
}